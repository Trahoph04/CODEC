#include <stdio.h>
#define MAX_M 500
typedef struct {
    int u, v;
} Edge;
typedef struct {
    int n, m;     
    Edge edges[MAX_M];
} Graph;
void init_graph(Graph *pG, int n) {
pG->n = n;
pG->m = 0;
}
//danh sach cung
void add_edge(Graph *pG, int u, int v) {
    if (u < 1 || u > pG->n || v < 1 || v > pG->n) {
        return;
    }
	pG->edges[pG->m].u = u;
	pG->edges[pG->m].v = v;
	pG->m++;
}
//danh sach cung don do thi co huong
void add_edge(Graph *pG, int u, int v) {
    for (int i = 0; i < pG->m; i++) {
        if (pG->edges[i].u == u && pG->edges[i].v == v) {
            return;
        }
    }
    pG->edges[pG->m].u = u;
    pG->edges[pG->m].v = v;
    pG->m++;
}
//danh sach cung don do thi vo huong
void add_edge(Graph *pG, int u, int v) {
    for (int i = 0; i < pG->m; i++) {
        int x = pG->edges[i].u;
        int y = pG->edges[i].v;
        if ((x == u && y == v) || (x == v && y == u)) {
            return;
        }
    }
    pG->edges[pG->m].u = u;
    pG->edges[pG->m].v = v;
    pG->m++;
}


